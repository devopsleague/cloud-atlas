Stage,Step,Qovery service,Description
Auth,Git push received,Control plane,Qovery receives your git commit via Github/Gitlab/Bitbucket webhooks
Auth,Check permissions,Control plane,Qovery checks permissions to proceed app deployment or not
Build,Build container,Engine,Qovery builds your NodeJS app into container
Build,Push container,Engine,Qovery push the container into your container registry
Deploy,Deploy PostgreSQL,Engine,Qovery match the PostgreSQL version with AWS RDS PostgreSQL and deploy it on your AWS account
Deploy,Configure PostgreSQL network,Engine,Qovery configure the network of your AWS RDS PostgreSQL to make it accessible from your application
Deploy,Check PostgreSQL,Engine,Qovery checks your AWS RDS PostgreSQL is well deployed and running
Deploy,Deploy container,Engine,Qovery deploys your container on your Kubernetes cluster
Deploy,Configure container network,Engine,Qovery configure the network of your container to make it accessible from outside
Deploy,Load balancer,Engine,Qovery deploys a load balancer and bind it to your application
Deploy,DNS,Engine,Qovery assign a domain to your application
Deploy,TLS,Engine,Qovery request a TLS certificate and bind it to your domain and application
Deploy,Check container,Engine,Qovery checks your container is well deployed and accessible via internet
Run,Run database,Engine,Qovery monitor your AWS RDS PostgreSQL database
Run,Run container,Engine,Qovery runs your container on Kubernetes and ensure it has the maximum uptime
Run,Metrics,Agent,Qovery watch your application and database metrics and forward them to the Qovery Control Plane
Run,Notification,Control plane,Qovery notifies the user on the successful app and db deployment
Scale,Scale container,Agent,Qovery scale your containers depending on the CPU and custom metrics